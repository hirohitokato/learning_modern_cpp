/// ラムダ式

// 基本的な書き方：
// [キャプチャするオブジェクト](仮引数の一覧)->戻り値の型 { 複合文 }
// - キャプチャするオブジェクト(必須)：
//   - ラムダ式の中に持ってくるオブジェクトを指定する。複数指定可。コピー・参照どちらにするかに注意
//   - メンバ関数内で記述する場合は`[this]`を書くこと（寿命に注意）
// - 仮引数リスト(省略可)：
//   - 関数宣言の仮引数リストと同じ。省略した場合は`()`(=引数なし)となる
// - 戻り値の型(省略可)
//   - 戻り値の型。省略した場合は以下のルールで扱われる。
//     - 単一のreturn式になっていれば自動的に推論
//     - それ以外はvoid
// - 複合文(必須)

#include <iostream>

int main() {
    using namespace std;

    {
        // もっとも小さなラムダ式
        auto f = []{};
        f(); // 呼べる
    }
    cout << "-------------------------------------" << endl;
    {
        auto f = [](int a, const char *b) {
            cout << a << " & " << b << endl;
        };
        f(193, "Hello");
    }
}